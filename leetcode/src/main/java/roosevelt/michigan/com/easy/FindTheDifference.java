package roosevelt.michigan.com.easy;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

/**
 * Given two strings s and t which consist of only lowercase letters.
 * 
 * String t is generated by random shuffling string s and then add one more
 * letter at a random position.
 * 
 * Find the letter that was added in t.
 * 
 * @author soup
 *
 */
public class FindTheDifference {

	public char findTheDifference(String s, String t) {
		Map<Character, Integer> origMap = new HashMap<>();
		Map<Character, Integer> newMap = new HashMap<>();

		for (int i = 0; i < s.length(); i++) {
			if (origMap.containsKey(s.charAt(i))) {
				origMap.put(s.charAt(i), new Integer(origMap.get(s.charAt(i)) + 1));
			} else {
				origMap.put(s.charAt(i), new Integer("1"));
			}
		}

		for (int i = 0; i < t.length(); i++) {
			if (newMap.containsKey(t.charAt(i))) {
				newMap.put(t.charAt(i), new Integer(newMap.get(t.charAt(i)) + 1));
			} else {
				newMap.put(t.charAt(i), new Integer("1"));
			}
		}
		
		Iterator<Character> itr = newMap.keySet().iterator();
		while(itr.hasNext() ) {
			Character key = itr.next();
			if( !origMap.containsKey(key) ) {
				return key;
			}
			Integer origCount = origMap.get(key);
			Integer newCount = newMap.get(key);
			if( origCount.intValue() != newCount.intValue() ) {
				return key;
			}
		}
		
		throw new RuntimeException();
	}
}
